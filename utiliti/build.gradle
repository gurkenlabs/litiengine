plugins {
  id 'edu.sc.seis.launch4j' version '2.4.9'
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'application'

archivesBaseName = "utiliti"
version = "v0.5.0-beta"
mainClassName = "de.gurkenlabs.utiliti.Program"

sourceSets {
  main.java.srcDir "src"
  main.resources.srcDir "resources"
  main.resources.srcDir "localization"

  test.java.srcDir "tests"
  test.resources.srcDir "tests"
}

repositories {
  mavenCentral()
}

dependencies {
  implementation project(':')
  implementation 'com.github.weisj:darklaf-core:2.5.5'
  implementation 'com.github.weisj:darklaf-theme:2.5.5'
  implementation 'com.github.weisj:darklaf-property-loader:2.5.5'
  implementation 'com.github.weisj:darklaf-utils:2.5.5'
  implementation 'com.github.weisj:darklaf-native-utils:2.5.5'
  implementation 'com.github.weisj:darklaf-platform-base:2.5.5'
  implementation 'com.github.weisj:darklaf-windows:2.5.5'
  implementation 'net.java.dev.jna:jna:5.6.0'
  implementation 'org.swinglabs:jxlayer:3.0.4'
  implementation 'org.swinglabs:swingx:1.6.1'
  implementation 'com.formdev:svgSalamander:1.1.2.1'
  implementation 'com.fifesoft:rsyntaxtextarea:3.1.1'

  testImplementation project(':').sourceSets.test.output //needed for swing tests
  testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.0'
  testImplementation 'org.junit.jupiter:junit-jupiter-params:5.6.0'
  testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.6.0'
  testImplementation 'org.mockito:mockito-core:3.3.3'
}

test {
  useJUnitPlatform()
}

jar {
  from {
    configurations.runtimeClasspath.collect {
      it.isDirectory() ? it : zipTree(it)
    }
    configurations.compileClasspath.collect {
      it.isDirectory() ? it : zipTree(it)
    }
  }  {
    exclude 'META-INF/services/**'
    exclude 'META-INF/*.SF'
    exclude 'META-INF/*.DSA'
    exclude 'META-INF/*.RSA'
  }

  duplicatesStrategy = DuplicatesStrategy.EXCLUDE

  exclude '**/*.jnilib'
  exclude '**/*.dylib'
  exclude '**/*.so'
  exclude 'junit**/**'
  
  manifest {
    attributes 'Main-Class': 'de.gurkenlabs.utiliti.Program'
  }
}

launch4j {
  mainClassName = 'de.gurkenlabs.utiliti.Program'
  icon = 'pixel-icon-utiLITI.ico'
  outputDir = 'libs'
  outfile = archivesBaseName + '-v0.5.1-beta.exe'
  companyName = 'gurkenlabs.de'
  version = '0.5.1'
  textVersion = '0.5.1'
  copyright = '2020 gurkenlabs.de'
  jvmOptions = ['-Xms256m', '-Xmx1024m']
}

task copyDistFiles(type: Copy) {
  def buildFolder = new File(buildDir, 'libs')
  from('/dist/'){
    include 'pixel-icon-utiliti.ico'
    include 'config.properties'
  }

  into buildFolder
}

task distZipWindows(type: Zip) {
  group 'build'
  from 'build/libs/'
  include '*.exe'
  include 'config.properties'

  archiveClassifier = 'win'
  destinationDirectory = file('build/libs/')

  dependsOn createAllExecutables
}

task distZipLinuxMac(type: Zip) {
  group 'build'
  from 'build/libs/'
  include '*.jar'
  include 'config.properties'

  archiveClassifier = 'linux-mac'
  destinationDirectory = file('build/libs/')
}

build.dependsOn copyDistFiles